@model FinalCapstone.Models.Meeting

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
<html>
<head>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
</head>
<body>
    <h2>Find my Team:</h2>
    <div id="map"></div>
    <script>
        function initMap() {
            var venLocation = { lat: @Model.Latitude, lng: @Model.Longitude };

            var map = new google.maps.Map(document.getElementById('map'), { zoom: 12, center: venLocation });

            var marker = new google.maps.Marker({ position: venLocation, map: map, animation: google.maps.Animation.BOUNCE });

    //var infoWindow = new google.maps.InforWindow({
    //    content: (".details")
    //});

    //marker.addListener('click', function () {
    //    infoWindow.open(map, marker);
    //    });
    }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=" + PrivateKey. async defer></script>
</body>
</html>
<div>
    <h4>Meeting</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.team.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.team.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Time)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Time)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.LocationId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
