@model FinalCapstone.Models.Meeting

@{
    ViewBag.Title = "Directions";
}

<h2>Directions</h2>
<div>
    <html>
    <head>
        <style>
            #map {
                height: 400px;
                width: 100%;
            }
        </style>
    </head>
    <body>
        <h2>Find my Events:</h2>
        <div id="map"></div>
        <script>
         
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), { zoom: 12, center: lat: @Model.Latitude, lng: @Model.Longitude });

            var autocomplete = new google.maps.places.Autocomplete(Dom_NODE);
            autocomplete.bindTo('bounds', map);
            autocomplete.addListener('place_changed', () => {
                var place = autocomplete.getPlace();
            });


            var renderDirections = (origin, destination) => {
                var directionsService = new google.maps.DirectionService(),
                    directionsDisplay = new google.maps.DirectionsRenderer(),
                    request = {
                        origin: origin,
                        destination: destination,
                        travelMode: 'DRIVING'
                    }
                directionsDisplay.setMap(map);
                directionsService.route(request, (result, status) => {
                    if (status == 'OK') {
                        directionsDisplay.setDirections(result);
                    }
                }
            };
            var marker = new google.maps.Marker({ position: start, map: map });
            

    //var infoWindow = new google.maps.InfoWindow({
    //    content: (".details")
    }

    //marker.addListener('click', function () {
    //    infoWindow.open(map, marker);
    //    });
    //}

        </script>
        <script src=@Model.APIDirections async defer></script>
    </body>
    </html>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Time)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Time)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.MeetingId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
