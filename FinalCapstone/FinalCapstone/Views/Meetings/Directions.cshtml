@model IEnumerable<FinalCapstone.Models.Meeting>

@{
    ViewBag.Title = "Directions";
}

<h2>Directions</h2>
<html>
<br /><br /><br />
<head>
<style>
#map {
  height: 100%;
}
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}
#floating-panel {
  position: inherit;
  top: 10px;
  left: 25%;
  z-index: 5;
  background-color: #fff;
  padding: 5px;
  border: 1px solid #999;
  text-align: center;
  font-family: 'Roboto','sans-serif';
  line-height: 30px;
  padding-left: 10px;
}
#right-panel {
  font-family: 'Roboto','sans-serif';
  line-height: 30px;
  padding-left: 10px;
}

#right-panel select, #right-panel input {
  font-size: 15px;
}

#right-panel select {
  width: 100%;
}

#right-panel i {
  font-size: 12px;
}
#right-panel {
  height: 100%;
  float: right;
  width: 390px;
  overflow: auto;
}
#map {
  margin-right: 400px;
}
#floating-panel {
  background: #fff;
  padding: 5px;
  font-size: 14px;
  font-family: Arial;
  border: 1px solid #ccc;
  box-shadow: 0 2px 2px rgba(33, 33, 33, 0.4);
  display: none;
}
  #map {
    height: 500px;
    margin: 0;
  }
  #right-panel {
    float: none;
    width: auto;
  }

</style>
    </head>
    <body>

        <h2>Directions:</h2>
      
        <div id="floating-panel">
            <strong>Start:</strong>
            <select id="start">
            @foreach (var item in @ViewBag.Meeting)
            {
            <option value="@item.StreetAddress, @item.City, @item.State">@item.Name</option>
            }
        </select>
        <br>
                <strong>End:</strong>
                <select id="end">
                    @foreach (var item in @ViewBag.Meeting)
                    {
                        <option value="@item.StreetAddress, @item.City, @item.State">@item.Name</option>
                    }
                </select>
        </div>
        <div id="right-panel"></div>
        <div id="map"></div>
        <script async defer src = "@ViewBag.APICall"></script>
<script>
  function initMap() {
  var directionsRenderer = new google.maps.DirectionsRenderer;
  var directionsService = new google.maps.DirectionsService;
  var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7,
          center: start
  });
  directionsRenderer.setMap(map);
  directionsRenderer.setPanel(document.getElementById('right-panel'));

  var control = document.getElementById('floating-panel');
  control.style.display = 'block';
  map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

  var onChangeHandler = function() {
    calculateAndDisplayRoute(directionsService, directionsRenderer);
  };
  document.getElementById('start').addEventListener('change', onChangeHandler);
  document.getElementById('end').addEventListener('change', onChangeHandler);
}

function calculateAndDisplayRoute(directionsService, directionsRenderer) {
  var start = document.getElementById('start').value;
  var end = document.getElementById('end').value;
  directionsService.route({
    origin: start,
    destination: end,
    travelMode: 'DRIVING'
  },
function (response, status) {
    if (status === 'OK') {
      directionsRenderer.setDirections(response);
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}
        </script>
    </body>
    </html>

    <hr />
<p>
    @Html.ActionLink("Back to List", "Index", new { id = Model.FirstOrDefault().TeamId }, null)
</p>
